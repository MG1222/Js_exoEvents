for(var i = 0; i < document.body.childNodes.length; i++) {
	console.log(document.body.childNodes[i]); 
}

// f.1
/*
var footer = document.querySelector('footer');
console.log(footer);
addEventListener("click", function () {
	console.log("clique");	
});
*/

// f.1-bis
var footer = document.querySelector('footer');
var count = 0;
footer.addEventListener("click", function () {
	count++;
	console.log(`click numero: ${count}`)	
});

//f.2
var elmtNavH = document.getElementById("navbarHeader");
var elmtNav = document.getElementsByClassName("navbar-toggler")[0];
// var navStatus = false;

elmtNav.addEventListener("click", function () {
	/* if (navStatus == false) {
		elmtNavH.classList.remove("collapse");
		navStatus = true
	}
	 else if ( navStatus == true) {
		elmtNavH.classList.add("collapse");
		navStatus = false
	}
	*/
		elmtNavH.classList.toggle('collapse');
	
});
/*√Ä pr√©sent, on va faire cela : si on clique sur le bouton "Edit" de la premi√®re card, le texte de la card va se mettre en rouge de fa√ßon irr√©versible (sauf si on recharge la page). √Ä toi de jouer !

Indice : Commence par bien pointer sur la premi√®re card en entier (stocke-la dans une variable puis affiche-la en console pour confirmer que tu l'as bien point√©).
Puis pointe vers le bouton Edit de cette card (idem : stocke-le dans une variable et affiche-le en console).
Une fois que √ßa c'est bien fait, tu peux facilement rajoute un style ="color: red" au texte de la card !
 */
// f.3
let btnEdit = document.querySelector(".btn.btn-sm.btn-outline-secondary");
let cardText = document.querySelector("p.card-text");
console.log(btnEdit);
console.log(cardText);

btnEdit.addEventListener("click", function () {
	cardText.style.color = "red";
});

/* On va faire quelque chose de similaire √† la fonctionnalit√© 3 mais un peu plus complexe : si on clique sur le bouton "Edit" de la deuxi√®me card, 
le texte de la card va se mettre en vert. Si on re-clique dessus, il redevient comme avant ! 
Tu l'as compris, il va falloir que tu cherches comment faire un "toggle" sur le style du texte. C'est plus compliqu√© que sur une classe.

Indice : Reprend le code de la fonctionnalit√© 3 et adapte-le pour qu'il marche sur la 2√®me card (et en rempla√ßant le rouge par du vert).
Maintenant, pour le toggle, il va falloir te faire un petit if / else dans ton AddEventListener. On te donne le d√©but :
if (secondCard.style.color === 'green'){
secondCard.style.color = '' ;
}else ‚Ä¶*/

// f.4
let bntEdit_2 = document.querySelectorAll(".btn.btn-sm.btn-outline-secondary")[1];
console.log(bntEdit_2);
let cardText_2 = document.querySelectorAll("p.card-text")[1];
console.log(cardText_2);
bntEdit_2.addEventListener("click", function () {
	//cardText_2.style.color = "green";
	if (cardText_2.style.color === "green") {
		cardText_2.style.color = "black";
	}
	else {
		cardText_2.style.color = "green";
		
	}
});

/* Pour le fun, on va impl√©menter une fonctionnalit√© √† la sauce ‚ò¢"nucl√©aire"ü§Ø.
 Et comme elle est un peu dangereuse, on va la cacher‚Ä¶ 
 Voici comment elle doit marcher : si un utilisateur double clique sur la navbar en haut, 
 tout Bootstrap dispara√Æt et la page s'affiche comme si on avait oubli√© de mettre le CDN qui 
 la relie au fichier CSS. Si possible, rends cette fonctionnalit√© r√©versible (un nouveau double-clic fait tout revenir √† la normale).

Indice : Cherche sur Google comment d√©sactiver le tag <link> avec JavaScript.*/
// f.5
let navBar = document.querySelector('.navbar');
let linkTag = document.getElementsByTagName('link')[0];
let linkDis = false;
navBar.addEventListener("dblclick", function () {
	if (linkDis == false) {
		linkTag.disabled = true;
		linkDis = true;
	}
	else if(linkDis == true){
		linkTag.disabled = false;
		linkDis = false;
	}
});
/*
T'as d√©j√† impl√©ment√© 5 fonctionnalit√©s d'interaction ! C'est top ! On va commencer √† corser les choses.

La fonctionnalit√© sera la suivante : si un utilisateur passe sa souris sur le bouton
 "View" d'une card (n'importe laquelle), celle-ci va se r√©duire. Cela veut dire que le texte dispara√Æt,
  l'image n'appara√Ætra qu'√† 20 % de sa taille d'origine et les boutons "Edit" / "View" restent visibles. 
  Cette fonction sera r√©versible : s'il repasse sa souris, la card redevient normale !

Indice 1 : Commence par impl√©menter cette fonctionnalit√© sur une card avant d'essayer de les faire toutes.

Indice 2 : Tu vas devoir appliquer les le√ßons apprises sur 
la fonctionnalit√© 2 (toggle de la classe "collapse") et sur la fonctionnalit√© 3 (toggle sur le style appliqu√© √† l'image : 
tant√¥t on lui rajoute "width: 20 %;", tant√¥t on lui enl√®ve).

Indice 3 : Une fois que √ßa marche sur une card, 
fait une boucle for sur la liste des 6 cards (a priori tu as extrait 
la card d'une liste d'√©l√©ments HTML non?) pour appliquer un addEventListener √† chacune. /!\ 
mets bien le compteur de ta boucle en "let", sinon tu vas avoir des surprises‚Ä¶ => clique ici pour acc√©der √† une ressource qui parle de √ßa
*/
// f.6
let btnView = document.querySelectorAll(".btn.btn-sm.btn-success");
for (let i = 0; i < btnView.length; i++) {
	console.log(btnView);
	let cardImgs = document.querySelectorAll(".card-img-top")[i];
	console.log(cardImgs);
	let cardTexts = document.querySelectorAll("p.card-text")[i];
	console.log(cardTexts);
	t = true;

btnView[i].addEventListener("mouseover", function () {
	if (t === true) {
		cardTexts.style.display = "none";
		cardImgs.style.width = "20%";
		t = false;
	}
	else if (t === false) {
		cardTexts.style.display = "block";
		cardImgs.style.width = "100%";
		t = true;
	}
});

}
/* Allez on va rajouter un peu de WTF dans la page : si un utilisateur clique sur le bouton gris ==>,
 la derni√®re card (en bas √† droite) va passer en premier (en haut √† gauche). On va pouvoir faire tourner les cards !

Indice : Cette fonctionnalit√© n'est pas ultra complexe en fait : 
il faut pointer sur le noeud-parent des 6 cards puis d√©placer la card n¬∞6 en premier avec un insertBefore.*/
// f.7
let btnR = document.getElementsByClassName('btn btn-secondary my-2')[0];
console.log(btnR);

btnR.addEventListener("click", function () {
	let card = document.getElementsByClassName("card");
	lastCard = card[5].parentNode;
	firstCard = card[0].parentNode;

	parent = lastCard.parentNode;

	parent.insertBefore(lastCard,firstCard);
});
// f.8 
let btnL = document.getElementsByClassName('btn btn-primary my-2')[0];

btnL.addEventListener("click", function (event) {
	event.preventDefault(); // desactiver le link 
	let card = document.getElementsByClassName("card");
	firstCard = card[0].parentNode;
	lastCard = card[5].parentNode;

	parent = lastCard.parentNode;

	parent.insertBefore(firstCard, lastCard);

	 
});

/* La fonctionnalit√© se d√©clenchera si le logo de la page (JS & Events) est s√©lectionn√© et
 qu'on appuie sur une touche sp√©cifique du clavier.
Si l'utilisateur presse la touche "a", 
l'ensemble de la page va √™tre condens√© sur 4 colonnes Bootstrap √† gauche de l'√©cran.
Si l'utilisateur presse la touche "y", 
l'ensemble de la page va √™tre condens√© sur 4 colonnes Bootstrap au milieu de l'√©cran.
Si l'utilisateur presse la touche "p", 
l'ensemble de la page va √™tre condens√© sur 4 colonnes Bootstrap √† droite de l'√©cran.
Si l'utilisateur presse la touche "b", 
tout redevient normal.
Indice 1 : L'event √† utiliser est "keypress", appliqu√© au texte "JS & Events" (ou, mieux, √† une div le contenant).

Indice 2 : Pour modifier le rendu visuel de toute la page, il faut que tu joues avec les classes de <body>.

Indice 3 : Pour mettre tout sur 4 colonnes, rajoute la classe col-4. Pour les placer au milieu ou √† droite,
 rajoute la classe offset-md-4 ou offset-md-8.

Indice 4 : Pour √©viter que les classes s'accumulent, et pour que chaque touche ait un comportement propre, 
retire toutes les classes du <body> √† chaque fois qu'un "keypress" est d√©tect√©. Ensuite seulement tu rajoutes les classes n√©cessaires.*/
// f.9
// https://developer.mozilla.org/fr/docs/Web/API/Element/keypress_event
let emlLogo = document.getElementsByTagName("strong")[0];
console.log(emlLogo);
let body = document.querySelector("body");
console.log(body);
emlLogo.addEventListener("keypress", function (){
	
});


















